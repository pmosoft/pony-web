{"remainingRequest":"d:\\fframe\\workspace\\pony-web\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!d:\\fframe\\workspace\\pony-web\\node_modules\\ag-grid-community\\dist\\lib\\exporter\\xmlFactory.js","dependencies":[{"path":"d:\\fframe\\workspace\\pony-web\\node_modules\\ag-grid-community\\dist\\lib\\exporter\\xmlFactory.js","mtime":1566387905186},{"path":"d:\\fframe\\workspace\\pony-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1566388048828},{"path":"d:\\fframe\\workspace\\pony-web\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1566387884895}],"contextDependencies":[],"result":["/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v19.1.4\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = /*@__PURE__*/ require(\"tslib\").__decorate;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../context/context\");\nvar LINE_SEPARATOR = '\\r\\n';\nvar XmlFactory = /*@__PURE__*/ (function () {\n    function XmlFactory() {\n    }\n    XmlFactory.prototype.createHeader = function (headerElement) {\n        if (headerElement === void 0) {\n            headerElement = {};\n        }\n        var headerStart = '<?';\n        var headerEnd = '?>';\n        var keys = ['version'];\n        if (!headerElement.version)\n            headerElement.version = \"1.0\";\n        if (headerElement.encoding)\n            keys.push('encoding');\n        if (headerElement.standalone)\n            keys.push('standalone');\n        var att = keys.map(function (key) { return key + \"=\\\"\" + headerElement[key] + \"\\\"\"; }).join(' ');\n        return headerStart + \"xml \" + att + \" \" + headerEnd;\n    };\n    XmlFactory.prototype.createXml = function (xmlElement, booleanTransformer) {\n        var _this = this;\n        var props = '';\n        if (xmlElement.properties) {\n            if (xmlElement.properties.prefixedAttributes) {\n                xmlElement.properties.prefixedAttributes.forEach(function (prefixedSet) {\n                    Object.keys(prefixedSet.map).forEach(function (key) {\n                        props += _this.returnAttributeIfPopulated(prefixedSet.prefix + key, prefixedSet.map[key], booleanTransformer);\n                    });\n                });\n            }\n            if (xmlElement.properties.rawMap) {\n                Object.keys(xmlElement.properties.rawMap).forEach(function (key) {\n                    props += _this.returnAttributeIfPopulated(key, xmlElement.properties.rawMap[key], booleanTransformer);\n                });\n            }\n        }\n        var result = '<' + xmlElement.name + props;\n        if (!xmlElement.children && xmlElement.textNode == null) {\n            return result + '/>' + LINE_SEPARATOR;\n        }\n        if (xmlElement.textNode != null) {\n            return result + '>' + xmlElement.textNode + '</' + xmlElement.name + '>' + LINE_SEPARATOR;\n        }\n        result += '>' + LINE_SEPARATOR;\n        xmlElement.children.forEach(function (it) {\n            result += _this.createXml(it, booleanTransformer);\n        });\n        return result + '</' + xmlElement.name + '>' + LINE_SEPARATOR;\n    };\n    XmlFactory.prototype.returnAttributeIfPopulated = function (key, value, booleanTransformer) {\n        if (!value && value !== '' && value !== 0) {\n            return '';\n        }\n        var xmlValue = value;\n        if ((typeof (value) === 'boolean')) {\n            if (booleanTransformer) {\n                xmlValue = booleanTransformer(value);\n            }\n        }\n        return \" \" + key + \"=\\\"\" + xmlValue + \"\\\"\";\n    };\n    XmlFactory = __decorate([\n        context_1.Bean('xmlFactory')\n    ], XmlFactory);\n    return XmlFactory;\n}());\nexports.XmlFactory = XmlFactory;\n",null]}