{"remainingRequest":"d:\\fframe\\workspace\\pony-web\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!d:\\fframe\\workspace\\pony-web\\node_modules\\ag-grid-community\\dist\\lib\\rowModels\\clientSide\\filterStage.js","dependencies":[{"path":"d:\\fframe\\workspace\\pony-web\\node_modules\\ag-grid-community\\dist\\lib\\rowModels\\clientSide\\filterStage.js","mtime":1566387946282},{"path":"d:\\fframe\\workspace\\pony-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1566388048828},{"path":"d:\\fframe\\workspace\\pony-web\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1566387884895}],"contextDependencies":[],"result":["/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v19.1.4\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = /*@__PURE__*/ require(\"tslib\").__decorate;\nvar __metadata = /*@__PURE__*/ require(\"tslib\").__metadata;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../../context/context\");\nvar gridOptionsWrapper_1 = require(\"../../gridOptionsWrapper\");\nvar filterService_1 = require(\"../../rowNodes/filterService\");\nvar selectableService_1 = require(\"../../rowNodes/selectableService\");\nvar FilterStage = /*@__PURE__*/ (function () {\n    function FilterStage() {\n    }\n    FilterStage.prototype.execute = function (params) {\n        var rowNode = params.rowNode;\n        if (this.gridOptionsWrapper.isEnableServerSideFilter()) {\n            this.filterService.filter(rowNode, false);\n        }\n        else {\n            this.filterService.filterAccordingToColumnState(rowNode);\n        }\n        this.selectableService.updateSelectableAfterFiltering(rowNode);\n    };\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], FilterStage.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('selectableService'),\n        __metadata(\"design:type\", selectableService_1.SelectableService)\n    ], FilterStage.prototype, \"selectableService\", void 0);\n    __decorate([\n        context_1.Autowired('filterService'),\n        __metadata(\"design:type\", filterService_1.FilterService)\n    ], FilterStage.prototype, \"filterService\", void 0);\n    FilterStage = __decorate([\n        context_1.Bean('filterStage')\n    ], FilterStage);\n    return FilterStage;\n}());\nexports.FilterStage = FilterStage;\n",null]}